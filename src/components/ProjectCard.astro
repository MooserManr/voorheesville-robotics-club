---
import type { CollectionEntry } from 'astro:content';
import { formatDateShort } from '@/utils/formatDate';

interface Props {
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;
const slug = project.id.replace(/\.md$/, '');
---

<article class="group flex flex-col h-full bg-white border border-gray-200 rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-300">
  <!-- Image -->
  {project.data.image && (
    <a href={`/projects/${slug}`} class="block overflow-hidden relative">
      <img
        src={project.data.image}
        alt={project.data.title}
        class="w-full h-56 object-cover group-hover:scale-105 transition-transform duration-300"
        loading="lazy"
        onerror="this.parentElement.style.display='none'"
      />
      <!-- Status Badge -->
      <div class="absolute top-4 right-4">
        <span
          class:list={[
            'inline-block px-3 py-1 text-xs font-medium rounded-full shadow-sm',
            project.data.status === 'completed'
              ? 'bg-green-100 text-green-800'
              : 'bg-yellow-100 text-yellow-800',
          ]}
        >
          {project.data.status === 'completed' ? 'Completed' : 'In Progress'}
        </span>
      </div>
    </a>
  )}

  <!-- Content -->
  <div class="flex-1 p-6 flex flex-col">
    <!-- Title -->
    <h3 class="text-xl font-bold text-gray-900 mb-2 group-hover:text-blue-600 transition-colors">
      <a href={`/projects/${slug}`} class="hover:underline">
        {project.data.title}
      </a>
    </h3>

    <!-- Description -->
    <p class="text-gray-600 mb-4 flex-1">
      {project.data.description}
    </p>

    <!-- Tech Stack -->
    <div class="mb-4">
      <div class="flex flex-wrap gap-2">
        {project.data.tech.slice(0, 3).map((tech) => (
          <span class="inline-block px-2 py-1 text-xs font-medium bg-gray-100 text-gray-700 rounded">
            {tech}
          </span>
        ))}
        {project.data.tech.length > 3 && (
          <span class="inline-block px-2 py-1 text-xs font-medium text-gray-500">
            +{project.data.tech.length - 3} more
          </span>
        )}
      </div>
    </div>

    <!-- Meta -->
    <div class="flex items-center justify-between text-sm text-gray-500 pt-4 border-t">
      <div class="flex items-center gap-2">
        <svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
        </svg>
        <span>{project.data.team.length} member{project.data.team.length !== 1 ? 's' : ''}</span>
      </div>
      <time datetime={project.data.date.toISOString()}>
        {formatDateShort(project.data.date)}
      </time>
    </div>
  </div>
</article>
