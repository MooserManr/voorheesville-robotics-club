---
import type { CollectionEntry } from 'astro:content';
import { formatDateShort } from '@/utils/formatDate';
import { getReadingTime } from '@/utils/getReadingTime';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const readingTime = getReadingTime(post.body);
const slug = post.id.replace(/\.md$/, '');
---

<article class="group flex flex-col h-full bg-white border border-gray-200 rounded-lg overflow-hidden hover:shadow-lg transition-shadow duration-300">
  <!-- Image -->
  {post.data.image && (
    <a href={`/blog/${slug}`} class="block overflow-hidden">
      <img
        src={post.data.image}
        alt={post.data.title}
        class="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"
        loading="lazy"
        onerror="this.parentElement.style.display='none'"
      />
    </a>
  )}

  <!-- Content -->
  <div class="flex-1 p-6 flex flex-col">
    <!-- Tags -->
    {post.data.tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-3">
        {post.data.tags.slice(0, 2).map((tag) => (
          <span class="inline-block px-2 py-1 text-xs font-medium text-blue-600 bg-blue-50 rounded">
            {tag}
          </span>
        ))}
      </div>
    )}

    <!-- Title -->
    <h3 class="text-xl font-bold text-gray-900 mb-2 group-hover:text-blue-600 transition-colors">
      <a href={`/blog/${slug}`} class="hover:underline">
        {post.data.title}
      </a>
    </h3>

    <!-- Description -->
    <p class="text-gray-600 mb-4 flex-1">
      {post.data.description}
    </p>

    <!-- Meta -->
    <div class="flex items-center justify-between text-sm text-gray-500 pt-4 border-t">
      <div class="flex items-center gap-2">
        <svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
        </svg>
        <span>{post.data.author}</span>
      </div>
      <div class="flex items-center gap-3">
        <time datetime={post.data.date.toISOString()}>
          {formatDateShort(post.data.date)}
        </time>
        <span>â€¢</span>
        <span>{readingTime}</span>
      </div>
    </div>
  </div>
</article>
